name: Claude Auto Code Review & Fix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze-and-fix:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          pip install requests
          cargo install cargo-audit

      - name: Run Clippy and Cargo Audit
        run: |
          cargo clippy --all-targets --message-format=json > clippy-results.json || echo "Clippy found issues"
          cargo audit --json > audit-results.json || echo "Cargo audit found security issues"

      - name: Analyze Code with Claude
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          python analyze_code.py
          if grep -q "fixes_available=true" analyze_output.txt; then
            echo "fixes_available=true" >> $GITHUB_ENV
          else
            echo "fixes_available=false" >> $GITHUB_ENV
          fi

      - name: Apply Fixes
        if: env.fixes_available == 'true'
        run: python apply_fixes.py fixes.json

      - name: Run Tests After Fixes
        if: env.fixes_available == 'true'
        run: |
          if cargo test; then
            echo "check_passed=true" >> $GITHUB_ENV
          else
            echo "Reverting changes due to test failures..."
            git checkout -- .
            echo "check_passed=false" >> $GITHUB_ENV
          fi

      - name: Commit and Push Fixes
        if: env.fixes_available == 'true' && env.check_passed == 'true' && github.event_name == 'pull_request'
        run: |
          git add .
          git commit -m "Automated fixes from Claude [skip ci]" || echo "No changes to commit"
          git push origin "HEAD:${GITHUB_HEAD_REF}" || echo "No changes to push"

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let report = fs.readFileSync('claude-analysis-report.md', 'utf8');
            let comment = `## Claude Code Analysis Report\n\n${report}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
